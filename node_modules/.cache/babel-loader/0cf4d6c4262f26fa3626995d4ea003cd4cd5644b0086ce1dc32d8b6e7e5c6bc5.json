{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mohamad\\\\Desktop\\\\QUIZ-APP\\\\quiz-app\\\\src\\\\components\\\\Quiz\\\\Qiuz.js\";\nimport React from 'react';\nimport './Quiz.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Quiz extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questions: [{\n        questionText: 'What is the capital of France?',\n        answerOptions: [{\n          answerText: 'New York',\n          isCorrect: false\n        }, {\n          answerText: 'London',\n          isCorrect: false\n        }, {\n          answerText: 'Paris',\n          isCorrect: true\n        }, {\n          answerText: 'Dublin',\n          isCorrect: false\n        }]\n      }, {\n        questionText: 'Who is CEO of Tesla?',\n        answerOptions: [{\n          answerText: 'Jeff Bezos',\n          isCorrect: false\n        }, {\n          answerText: 'Elon Musk',\n          isCorrect: true\n        }, {\n          answerText: 'Bill Gates',\n          isCorrect: false\n        }, {\n          answerText: 'Tony Stark',\n          isCorrect: false\n        }]\n      }, {\n        questionText: 'The iPhone was created by which company?',\n        answerOptions: [{\n          answerText: 'Apple',\n          isCorrect: true\n        }, {\n          answerText: 'Intel',\n          isCorrect: false\n        }, {\n          answerText: 'Amazon',\n          isCorrect: false\n        }, {\n          answerText: 'Microsoft',\n          isCorrect: false\n        }]\n      }, {\n        questionText: 'How many Harry Potter books are there?',\n        answerOptions: [{\n          answerText: '1',\n          isCorrect: false\n        }, {\n          answerText: '4',\n          isCorrect: false\n        }, {\n          answerText: '6',\n          isCorrect: false\n        }, {\n          answerText: '7',\n          isCorrect: true\n        }]\n      }],\n      currentQuestion: 0,\n      showScore: false,\n      score: 0\n    };\n    //this.clickHandeler = this.clickHandeler.bind(this)\n  }\n  clickHandeler(inCorect) {\n    if (inCorect) {\n      this.setState(pervState => {\n        return {\n          score: pervState.score + 1\n        };\n      });\n    }\n    if (this.state.currentQuestion) this.setState(pervState => {\n      return {\n        currentQuestion: pervState.currentQuestion + 1\n      };\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-count\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Question \", this.state.currentQuestion + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 33\n          }, this), \"/\", this.state.questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-text\",\n          children: this.state.questions[this.state.currentQuestion].questionText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer-section\",\n        children: this.state.questions[this.state.currentQuestion].answerOptions.map(answer => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.clickHandeler.bind(this, answer.isCorrect),\n          children: answer.answerText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Quiz","Component","constructor","props","state","questions","questionText","answerOptions","answerText","isCorrect","currentQuestion","showScore","score","clickHandeler","inCorect","setState","pervState","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","answer","onClick","bind"],"sources":["C:/Users/Mohamad/Desktop/QUIZ-APP/quiz-app/src/components/Quiz/Qiuz.js"],"sourcesContent":["import React from 'react';\r\nimport './Quiz.css'\r\n\r\nexport default class Quiz extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            questions: [\r\n                {\r\n                    questionText: 'What is the capital of France?',\r\n                    answerOptions: [\r\n                        { answerText: 'New York', isCorrect: false },\r\n                        { answerText: 'London', isCorrect: false },\r\n                        { answerText: 'Paris', isCorrect: true },\r\n                        { answerText: 'Dublin', isCorrect: false },\r\n                    ],\r\n                },\r\n                {\r\n                    questionText: 'Who is CEO of Tesla?',\r\n                    answerOptions: [\r\n                        { answerText: 'Jeff Bezos', isCorrect: false },\r\n                        { answerText: 'Elon Musk', isCorrect: true },\r\n                        { answerText: 'Bill Gates', isCorrect: false },\r\n                        { answerText: 'Tony Stark', isCorrect: false },\r\n                    ],\r\n                },\r\n                {\r\n                    questionText: 'The iPhone was created by which company?',\r\n                    answerOptions: [\r\n                        { answerText: 'Apple', isCorrect: true },\r\n                        { answerText: 'Intel', isCorrect: false },\r\n                        { answerText: 'Amazon', isCorrect: false },\r\n                        { answerText: 'Microsoft', isCorrect: false },\r\n                    ],\r\n                },\r\n                {\r\n                    questionText: 'How many Harry Potter books are there?',\r\n                    answerOptions: [\r\n                        { answerText: '1', isCorrect: false },\r\n                        { answerText: '4', isCorrect: false },\r\n                        { answerText: '6', isCorrect: false },\r\n                        { answerText: '7', isCorrect: true },\r\n                    ],\r\n                },\r\n            ],\r\n            currentQuestion: 0,\r\n            showScore: false,\r\n            score: 0\r\n        }\r\n        //this.clickHandeler = this.clickHandeler.bind(this)\r\n    }\r\n clickHandeler(inCorect){\r\nif(inCorect){\r\n    this.setState(pervState=>{\r\n        return {score : pervState.score +1}\r\n    })\r\n}\r\n\r\nif(this.state.currentQuestion )\r\n\r\n\r\nthis.setState(pervState=>{\r\nreturn {currentQuestion : pervState.currentQuestion + 1}\r\n})\r\n}\r\n    render() {\r\n        return (\r\n            <div className='app'>\r\n                {/* next div is for showing user score */}\r\n                    {/* <div className='score-section'>\r\n                        You scored 0 out of 4\r\n                    </div> */}\r\n                        <div className='question-section'>\r\n                            <div className='question-count'>\r\n                                <span>Question {this.state.currentQuestion + 1}</span>/{this.state.questions.length}\r\n                            </div>\r\n                            <div className='question-text'>{this.state.questions[this.state.currentQuestion].questionText}</div>\r\n                        </div>\r\n                        <div className='answer-section'>\r\n                            {this.state.questions[this.state.currentQuestion].answerOptions.map((answer)=>(\r\n\r\n                                <button onClick={this.clickHandeler.bind(this,answer.isCorrect)}>{answer.answerText}</button>\r\n                            ))}\r\n                                \r\n                        </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnB,eAAe,MAAMC,IAAI,SAASH,KAAK,CAACI,SAAS,CAAC;EAE9CC,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IAEZ,IAAI,CAACC,KAAK,GAAG;MACTC,SAAS,EAAE,CACP;QACIC,YAAY,EAAE,gCAAgC;QAC9CC,aAAa,EAAE,CACX;UAAEC,UAAU,EAAE,UAAU;UAAEC,SAAS,EAAE;QAAM,CAAC,EAC5C;UAAED,UAAU,EAAE,QAAQ;UAAEC,SAAS,EAAE;QAAM,CAAC,EAC1C;UAAED,UAAU,EAAE,OAAO;UAAEC,SAAS,EAAE;QAAK,CAAC,EACxC;UAAED,UAAU,EAAE,QAAQ;UAAEC,SAAS,EAAE;QAAM,CAAC;MAElD,CAAC,EACD;QACIH,YAAY,EAAE,sBAAsB;QACpCC,aAAa,EAAE,CACX;UAAEC,UAAU,EAAE,YAAY;UAAEC,SAAS,EAAE;QAAM,CAAC,EAC9C;UAAED,UAAU,EAAE,WAAW;UAAEC,SAAS,EAAE;QAAK,CAAC,EAC5C;UAAED,UAAU,EAAE,YAAY;UAAEC,SAAS,EAAE;QAAM,CAAC,EAC9C;UAAED,UAAU,EAAE,YAAY;UAAEC,SAAS,EAAE;QAAM,CAAC;MAEtD,CAAC,EACD;QACIH,YAAY,EAAE,0CAA0C;QACxDC,aAAa,EAAE,CACX;UAAEC,UAAU,EAAE,OAAO;UAAEC,SAAS,EAAE;QAAK,CAAC,EACxC;UAAED,UAAU,EAAE,OAAO;UAAEC,SAAS,EAAE;QAAM,CAAC,EACzC;UAAED,UAAU,EAAE,QAAQ;UAAEC,SAAS,EAAE;QAAM,CAAC,EAC1C;UAAED,UAAU,EAAE,WAAW;UAAEC,SAAS,EAAE;QAAM,CAAC;MAErD,CAAC,EACD;QACIH,YAAY,EAAE,wCAAwC;QACtDC,aAAa,EAAE,CACX;UAAEC,UAAU,EAAE,GAAG;UAAEC,SAAS,EAAE;QAAM,CAAC,EACrC;UAAED,UAAU,EAAE,GAAG;UAAEC,SAAS,EAAE;QAAM,CAAC,EACrC;UAAED,UAAU,EAAE,GAAG;UAAEC,SAAS,EAAE;QAAM,CAAC,EACrC;UAAED,UAAU,EAAE,GAAG;UAAEC,SAAS,EAAE;QAAK,CAAC;MAE5C,CAAC,CACJ;MACDC,eAAe,EAAE,CAAC;MAClBC,SAAS,EAAE,KAAK;MAChBC,KAAK,EAAE;IACX,CAAC;IACD;EACJ;EACHC,aAAaA,CAACC,QAAQ,EAAC;IACxB,IAAGA,QAAQ,EAAC;MACR,IAAI,CAACC,QAAQ,CAACC,SAAS,IAAE;QACrB,OAAO;UAACJ,KAAK,EAAGI,SAAS,CAACJ,KAAK,GAAE;QAAC,CAAC;MACvC,CAAC,CAAC;IACN;IAEA,IAAG,IAAI,CAACR,KAAK,CAACM,eAAe,EAG7B,IAAI,CAACK,QAAQ,CAACC,SAAS,IAAE;MACzB,OAAO;QAACN,eAAe,EAAGM,SAAS,CAACN,eAAe,GAAG;MAAC,CAAC;IACxD,CAAC,CAAC;EACF;EACIO,MAAMA,CAAA,EAAG;IACL,oBACIlB,OAAA;MAAKmB,SAAS,EAAC,KAAK;MAAAC,QAAA,gBAKRpB,OAAA;QAAKmB,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC7BpB,OAAA;UAAKmB,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC3BpB,OAAA;YAAAoB,QAAA,GAAM,WAAS,EAAC,IAAI,CAACf,KAAK,CAACM,eAAe,GAAG,CAAC;UAAA;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,KAAC,EAAC,IAAI,CAACnB,KAAK,CAACC,SAAS,CAACmB,MAAM;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClF,CAAC,eACNxB,OAAA;UAAKmB,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAE,IAAI,CAACf,KAAK,CAACC,SAAS,CAAC,IAAI,CAACD,KAAK,CAACM,eAAe,CAAC,CAACJ;QAAY;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnG,CAAC,eACNxB,OAAA;QAAKmB,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAC1B,IAAI,CAACf,KAAK,CAACC,SAAS,CAAC,IAAI,CAACD,KAAK,CAACM,eAAe,CAAC,CAACH,aAAa,CAACkB,GAAG,CAAEC,MAAM,iBAEvE3B,OAAA;UAAQ4B,OAAO,EAAE,IAAI,CAACd,aAAa,CAACe,IAAI,CAAC,IAAI,EAACF,MAAM,CAACjB,SAAS,CAAE;UAAAU,QAAA,EAAEO,MAAM,CAAClB;QAAU;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAC/F;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAED,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC;EAEd;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}